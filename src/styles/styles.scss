@import "./variables.scss";
@import "./fonts.scss";

:root {
	font-family: $text;
	background-color: $white;
	color: $black;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html[data-astro-transition-fallback="old"] {
	// overflow-x: hidden;
}

body,
html {
	min-height: 100vh;
	margin: 0;
	font-size: $base;
}

body {
	white-space: pre-line;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
	font-family: $display;
	font-weight: 500;
	letter-spacing: -0.005em;
	line-height: 1;
}

h1,
.h1 {
	font-size: $base * 3;
}

h2,
.h2 {
	font-size: $base * 2.125;
}

h3, h4 {
	font-size: $base * 1.5;
	line-height: 1.35;
}

h4 {
	font-size: $base * 1.33;
}

h5, h6, .h6 {
	font-size: $base * 1.25;
	line-height: 1.25;
}

h6,
.h6 {
	font-size: $base;
}

p {
	font-size: $base;
	font-weight: 400;
	line-height: 1.35;
}

small {
	font-size: $base * 0.8125;
	line-height: 1.4;
}

a {
	color: currentColor;
	text-decoration: none;
}

a:hover {
	text-decoration: underline;
}

blockquote {
	padding-left: $base * 2;
	margin: ($base * 2) 0;
	border-left: 0.5px solid;

	p {
		font-size: $base * 2.3125;
		font-weight: 300;
		line-height: 1.1;
	}
}


ul,
ol {
	padding-left: 1em;

	&.list--unstyled {
		padding: 0;
		list-style: none;
	}
}

table {
	margin-bottom: $base * 2;

	td,
	th {
		text-align: left;
		padding: $base;
		border-bottom: 0.25px solid;
	}
}

input,
button {
	font-size: inherit;
	color: inherit;
	font-family: inherit;
	text-transform: inherit;
	border: none;
	background: none;
	padding: 0;
}

button {
	cursor: pointer;

	&:hover,
	&:focus {
		text-decoration: underline;
	}
}

button:focus:not(:focus-visible) {
	outline: none;
}

strong, b {
	font-weight: 500;
}


@keyframes rotating {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slideLeft {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0%);
  }
}

@keyframes slideRight {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0%);
  }
}