---
import type { Entry } from 'contentful'
import type { TypeGallerySkeleton } from '@/content_types'
import Close from '@/icons/close.svg?raw'
import Media from './Media.astro'
import Content from './Content.astro'

interface Props {
  item: Entry<TypeGallerySkeleton, "WITHOUT_UNRESOLVABLE_LINKS">
}
const { item } = Astro.props;

const randoms = {
  underlays: Math.floor(Math.random() * item.fields.underlays?.length),
  content: Math.floor(Math.random() * item.fields.content.length),
  overlays: Math.floor(Math.random() * item.fields.overlays.length),
}
---

<section class="gallery">
  <figure>
    <details class="tip">
      <summary>{item.fields.title} <Fragment set:html={Close} /></summary>
      <Content content={[item.fields.content[randoms.content]]} />
    </details>

    <Media media={item.fields.underlays[randoms.underlays]} eager square />

    <div class="overlay" style={`--mask: url(${item.fields.overlays[randoms.overlays].fields.file.url})`}></div>
  </figure>
</section>

<script>
  const overlay = document.querySelector<HTMLElement>('.overlay');

  overlay.addEventListener('click', () => {
    const tip = document.querySelector<HTMLDetailsElement>('.tip')
    tip.setAttribute('open', 'true')
  })
</script>

<style lang="scss">
  section {
    --gallery-color: #{$beige};
    position: relative;
    margin: $base * -3;
    background: var(--gallery-color);
    overflow: hidden;

    @media (max-width: $phone) {
      margin: 0;
    }
  }

  figure {
    height: 100vh;

    @media (max-width: $phone) {
      height: 80vh;
    }

    :global(picture) {
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;

      :global(img) {
        height: min(72vh, 92vw);
        width: min(72vh, 92vw);
        max-height: none;
        object-fit: cover;
        border-radius: 50%;

        transition: all 666ms;
      }
    }

    .overlay {
      cursor: pointer;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: var(--gallery-color);
      mask-image: var(--mask);
      -webkit-mask-image: var(--mask);
      mask-repeat: no-repeat;
      -webkit-mask-repeat: no-repeat;
      mask-position: center;
      -webkit-mask-position: center;
      mask-size: min(120vh, 153vw);
      -webkit-mask-size: min(120vh, 153vw);
      animation: rotating 20s linear infinite;

      transition: opacity 666ms;
    }

    details {
      position: absolute;
      z-index: 2;
      bottom: 0;
      left: 0;
      width: 100%;
      background-color: fade-out($black, 1);

      summary {
        cursor: pointer;
        font-size: $base * 1.25;
        padding: $base * 2;
        text-align: center;

        &::marker,
        &::-webkit-details-marker {
          display: none;
          content: "";
        }

        :global(> svg) {
          display: none;
        }
      }

      &[open] {
        color: $front-color;
        background-color: fade-out($black, 0.666);
        transition: background-color 666ms;
        height: 100%;
        overflow-y: auto;

        summary {
          position: absolute;
          top: 0;
          right: 0;
          font-size: 0;

          @media (max-width: $phone) {
            padding: $base * 0.5;
          }

          :global(> svg) {
            display: inline-block;

            @media (max-width: $phone) {
              width: $base * 2;
              height: $base * 2;
            }
          }
        }

        // + :global(picture) {
        //   display: none;
        // }

        ~ .overlay {
          opacity: 0;
        }

        ~ :global(picture img) {
          height: 100%;
          width: 100%;
          border-radius: 0;
        }
      }

      :global(summary) {
        padding: $base * 2;
        background-color: transparent;
        justify-content: center;
      }
    }
  }
</style>