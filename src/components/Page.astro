---
import type { Entry } from 'contentful'
import type { TypePageSkeleton, TypeNavigationSkeleton } from '@/content_types'
import Navigation from './Navigation.astro'
import Text from './Text.astro'
import Logo from './Logo.astro'

interface Props {
  page: any
  navigation: Entry<TypeNavigationSkeleton, "WITHOUT_UNRESOLVABLE_LINKS">
  color?: string
  index?: boolean
}
const { page, navigation, color, index } = Astro.props;
---

<main style={`--color: ${color};`}>
  <aside>
    {index
      ? <Navigation item={navigation} />
      : <a href="/">
        <h2>Close</h2>
        <svg width="44" height="44" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect x="20.5479" y="12.2322" width="44.3844" height="11.721" rx="5.36" transform="rotate(45 20.5479 12.2322)" fill="black"/>
        <rect x="51.9341" y="20.5199" width="44.3844" height="11.721" rx="5.36" transform="rotate(135 51.9341 20.5199)" fill="black"/>
        </svg>
      </a>}
    <Logo />
  </aside>
  <!-- <h1>{page.fields.title}</h1> -->

  <!-- <pre>{JSON.stringify(page.fields.content, null, 2)}</pre> -->
  <section>
    {page.fields.content?.map(item => ({
      'navigation': <Navigation {item} />,
      'text': <Text {item} />
    }[item.sys.contentType.sys.id]))}
  </section>
</main>

<style lang="scss">
  main {
    display: flex;
    min-height: 100vh;
    // flex-direction: column;
    // // gap: $base;
  }

    aside {
      flex: 1;
      padding: $base * 3;
      background-color: $beige;
      height: 100vh;
      position: sticky;
      top: 0;

      display: flex;
      flex-direction: column;
      justify-content: space-between;

      > a {
        display: flex;
        justify-content: space-between;
      }
    }

    section {
      flex: 3;
      color: var(--color);
      padding: $base * 3;
    }
</style>